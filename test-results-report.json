{
    "testPlanName": "Automation Test Plan",
    "testSuiteName": "Book API Python Requests Automation Test Suite",
    "testResults": {
        "54": {
            "outcome": "Passed",
            "durationInMs": 119,
            "comment": "Test Name: test_should_create_book_when_title_and_author_are_valid",
            "iterationDetails": []
        },
        "55": {
            "outcome": "Passed",
            "durationInMs": 23,
            "comment": "Test Name: test_should_reject_duplicate_book_creation",
            "iterationDetails": []
        },
        "56": {
            "outcome": "Passed",
            "durationInMs": 28,
            "comment": "Test Name: test_should_create_book_when_title_is_different_for_same_author",
            "iterationDetails": []
        },
        "57": {
            "outcome": "Passed",
            "durationInMs": 15,
            "comment": "Test Name: test_should_create_book_when_author_is_different_for_same_book",
            "iterationDetails": []
        },
        "58": {
            "outcome": "Passed",
            "durationInMs": 16,
            "comment": "Test Name: test_should_return_401_when_no_auth_token_provided",
            "iterationDetails": []
        },
        "59": {
            "outcome": "Passed",
            "durationInMs": 29,
            "comment": "Test Name: test_should_reject_book_with_missing_fields",
            "iterationDetails": [
                {
                    "id": 1,
                    "outcome": "Passed",
                    "durationInMs": 7,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"payload\": {}, \"expected_message\": \"Both title and author are required.\"}"
                },
                {
                    "id": 2,
                    "outcome": "Passed",
                    "durationInMs": 9,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"payload\": {\"author\": \"author only test\"}, \"expected_message\": \"Both title and author are required.\"}"
                },
                {
                    "id": 3,
                    "outcome": "Passed",
                    "durationInMs": 13,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"payload\": {\"title\": \"title only test\"}, \"expected_message\": \"Both title and author are required.\"}"
                }
            ]
        },
        "60": {
            "outcome": "Passed",
            "durationInMs": 7,
            "comment": "Test Name: test_should_reject_book_creation_with_client_provided_id",
            "iterationDetails": []
        },
        "61": {
            "outcome": "Passed",
            "durationInMs": 9,
            "comment": "Test Name: test_should_return_401_when_no_auth_token_provided_on_delete",
            "iterationDetails": []
        },
        "62": {
            "outcome": "Passed",
            "durationInMs": 8,
            "comment": "Test Name: test_should_return_403_when_user_auth_token_is_provided_on_delete",
            "iterationDetails": []
        },
        "63": {
            "outcome": "Passed",
            "durationInMs": 16,
            "comment": "Test Name: test_should_delete_book_when_book_id_is_valid",
            "iterationDetails": []
        },
        "64": {
            "outcome": "Passed",
            "durationInMs": 5,
            "comment": "Test Name: test_should_return_404_when_book_is_already_deleted_or_not_exists",
            "iterationDetails": []
        },
        "65": {
            "outcome": "Passed",
            "durationInMs": 7,
            "comment": "Test Name: test_should_return_books_for_default_page1",
            "iterationDetails": []
        },
        "66": {
            "outcome": "Passed",
            "durationInMs": 63,
            "comment": "Test Name: test_should_return_books_by_page_number",
            "iterationDetails": []
        },
        "67": {
            "outcome": "Passed",
            "durationInMs": 47,
            "comment": "Test Name: test_pagination_cases",
            "iterationDetails": [
                {
                    "id": 1,
                    "outcome": "Passed",
                    "durationInMs": 9,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"params\": {\"limit\": 5}, \"expected_count\": 5, \"message\": \"Books size by limit\"}"
                },
                {
                    "id": 2,
                    "outcome": "Passed",
                    "durationInMs": 11,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"params\": {\"limit\": 5, \"page\": 2}, \"expected_count\": 5, \"message\": \"Page 2 Book ids should be 5\"}"
                },
                {
                    "id": 3,
                    "outcome": "Passed",
                    "durationInMs": 18,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"params\": {\"page\": 3}, \"expected_count\": 0, \"message\": \"Books size out of page range should be 0\"}"
                },
                {
                    "id": 4,
                    "outcome": "Passed",
                    "durationInMs": 9,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"params\": {\"page\": -3}, \"expected_count\": 0, \"message\": \"Books size with negative page should be 0\"}"
                }
            ]
        },
        "68": {
            "outcome": "Passed",
            "durationInMs": 8,
            "comment": "Test Name: test_should_return_books_excluding_last_limit_on_negative_limit",
            "iterationDetails": []
        },
        "69": {
            "outcome": "Passed",
            "durationInMs": 6,
            "comment": "Test Name: test_should_return_single_book_by_id",
            "iterationDetails": []
        },
        "70": {
            "outcome": "Passed",
            "durationInMs": 7,
            "comment": "Test Name: test_should_not_return_book_when_book_id_is_invalid_string",
            "iterationDetails": []
        },
        "71": {
            "outcome": "Passed",
            "durationInMs": 12,
            "comment": "Test Name: test_should_not_return_book_when_book_id_not_exists",
            "iterationDetails": []
        },
        "72": {
            "outcome": "Passed",
            "durationInMs": 8,
            "comment": "Test Name: test_should_return_all_books_when_book_id_is_empty",
            "iterationDetails": []
        },
        "73": {
            "outcome": "Passed",
            "durationInMs": 12,
            "comment": "Test Name: test_should_return_books_contains_author",
            "iterationDetails": []
        },
        "74": {
            "outcome": "Passed",
            "durationInMs": 8,
            "comment": "Test Name: test_should_return_books_contains_title",
            "iterationDetails": []
        },
        "75": {
            "outcome": "Passed",
            "durationInMs": 13,
            "comment": "Test Name: test_should_return_books_contains_title_and_author",
            "iterationDetails": []
        },
        "76": {
            "outcome": "Passed",
            "durationInMs": 14,
            "comment": "Test Name: test_should_return_single_book_with_title_and_author",
            "iterationDetails": []
        },
        "77": {
            "outcome": "Passed",
            "durationInMs": 32,
            "comment": "Test Name: test_search_error_cases",
            "iterationDetails": [
                {
                    "id": 1,
                    "outcome": "Passed",
                    "durationInMs": 11,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"params\": {}, \"status_code\": 400, \"expected_message\": \"Please provide at least a title or author for search\"}"
                },
                {
                    "id": 2,
                    "outcome": "Passed",
                    "durationInMs": 8,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"params\": {\"title\": \"Book Title Not Exits\", \"author\": \"book author Not Exits\"}, \"status_code\": 404, \"expected_message\": \"Books not found for search\"}"
                },
                {
                    "id": 3,
                    "outcome": "Passed",
                    "durationInMs": 6,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"params\": {\"author\": \"book author Not Exits\"}, \"status_code\": 404, \"expected_message\": \"Books not found for search\"}"
                },
                {
                    "id": 4,
                    "outcome": "Passed",
                    "durationInMs": 7,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"params\": {\"title\": \"Book Title Not Exits\"}, \"status_code\": 404, \"expected_message\": \"Books not found for search\"}"
                }
            ]
        },
        "78": {
            "outcome": "Passed",
            "durationInMs": 26,
            "comment": "Test Name: test_should_update_book_author_or_title",
            "iterationDetails": [
                {
                    "id": 1,
                    "outcome": "Passed",
                    "durationInMs": 19,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"field\": \"author\", \"value\": \"New Author\"}"
                },
                {
                    "id": 2,
                    "outcome": "Passed",
                    "durationInMs": 7,
                    "errorMessage": "",
                    "comment": "DataDriven: Test Parameters: {\"field\": \"title\", \"value\": \"New Title\"}"
                }
            ]
        },
        "79": {
            "outcome": "Passed",
            "durationInMs": 9,
            "comment": "Test Name: test_should_return_401_when_no_auth_is_provided_on_update_book",
            "iterationDetails": []
        },
        "80": {
            "outcome": "Passed",
            "durationInMs": 10,
            "comment": "Test Name: test_should_return_404_when_book_with_id_is_not_exists",
            "iterationDetails": []
        },
        "81": {
            "outcome": "Passed",
            "durationInMs": 5,
            "comment": "Test Name: test_should_return_400_when_different_book_id_is_given_in_body",
            "iterationDetails": []
        },
        "82": {
            "outcome": "Passed",
            "durationInMs": 16,
            "comment": "Test Name: test_should_update_book_when_same_book_id_is_given_in_body",
            "iterationDetails": []
        }
    }
}